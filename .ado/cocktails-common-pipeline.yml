variables:
  serviceConnectionName: 'sc-vec-eus-default-svc-principal-001'
  artifactName: 'cocktails.common.build'

  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    branchType: main
  ${{ if ne(variables['Build.SourceBranchName'], 'main') }}: 
    branchType: pr

name: $(Build.DefinitionName)_$(branchType)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - cocktails.common/*

pool:
  vmImage: ubuntu-latest

stages:

##########################
### PREPARE BUILD
##########################
  - stage: PrepareBuild
    displayName: 'Prepare for build and test'
    jobs:
    - job: ApplyBuildTags
      displayName: 'Apply tags'
      steps:
      - script: |
          echo "##vso[build.addbuildtag]$(branchType)"
          echo "##vso[build.addbuildtag]cockails"
        displayName: 'Apply tags'

      - download: none
      - checkout: none  #skip loading source in this job (not needed)
      
    - template: ./list-file-changes.yml
      parameters:
        name: ListFilesChanges
        display: 'List file changes'
        rootDirectory: 'cocktails.common'

##########################
### BUILD
##########################

  - stage: Build
    displayName: 'Build and test and package'
    dependsOn: PrepareBuild
    jobs:
    - job: BuildNuget
      displayName: 'Build and test nuget project'
      steps:
        - template: nuget-build.yml
          parameters:
            workingDirectory: '$(System.DefaultWorkingDirectory)/cocktails.common'
            slnFilePath: 'Cocktails.Common.sln'
            projectFilePath: 'src/Cocktails.Common/Cocktails.Common.csproj'
            nugetConfigPath: 'Nuget.Config'
            testsDirectoryPath: 'test'
            branchType: ${{ variables.branchType }}
            artifactName: '${{ variables.artifactName }}'
            buildConfiguration: 'Release'

  - stage: Nuget
    displayName: 'Push nuget package'
    dependsOn: Build
    jobs:
    - deployment: Nuget
      displayName: 'Push nuget package'
      environment: nuget
      timeoutInMinutes: 10

      pool:
        vmImage: ubuntu-latest

      strategy:
        runOnce:
          deploy:
            steps:

              - checkout: self
                persistCredentials: true
                displayName: 'Checkout repository'

              - download: current  # refers to artifacts published by current pipeline
                artifact: '${{ variables.artifactName }}'
                displayName: Download ui build artifact

              - task: DotNetCoreCLI@2
                displayName: 'Nuget Push'
                condition: and(not(or(failed(), canceled())), eq('${{ variables.branchType }}', 'main'))
                inputs:
                  command: 'push'
                  packagesToPush: '$(Pipeline.Workspace)/${{ variables.artifactName }}/*.nupkg'
                  nuGetFeedType: 'internal'
                  publishVstsFeed: 'global'
                  allowPackageConflicts: true

              - script: |
                  tag="nuget-prod-$(date +%Y%m%dT%H%M%S%z)"
                  git tag $tag
                  git push origin $tag HEAD:refs/heads/main
                displayName: 'Git Tag'
                condition: and(not(or(failed(), canceled())), eq('${{ variables.branchType }}', 'main'))
                workingDirectory: $(Build.SourcesDirectory)
